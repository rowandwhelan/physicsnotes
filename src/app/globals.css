@import "tailwindcss/preflight";
@import "tailwindcss/utilities";
@import "tailwindcss/theme" layer(theme);

/* ---- Design tokens ---- */
:root {
  --bg: #fafafa;
  --fg: #0a0a0a;
  --muted: #6b7280;

  --card: #ffffff;
  --border: #e5e7eb;
  --ring: #9ca3af; /* stronger ring */

  --elevated: #ffffff;
  --elevated-hover: #efefef; /* stronger than before */

  --chip: #ffffff;
  --chip-selected: #111827;
  --chip-fg: #111827;
  --chip-selected-fg: #ffffff;

  --btn: #ffffff;
  --btn-fg: #111827;
  --btn-hover: #f0f0f0; /* slightly stronger */

  --muted-surface: #f3f4f6;

  --selection-bg: #e5e7eb;
  --selection-fg: #111827;

  color-scheme: light;
}
:root.dark {
  --bg: #0a0a0a;
  --fg: #f5f5f5;
  --muted: #9ca3af;

  --card: #0f0f10;
  --border: #2a2a2e;
  --ring: #6b7280; /* stronger ring in dark */

  --elevated: #121214; /* input/card resting bg */
  --elevated-hover: #232428; /* stronger hover delta */

  --chip: #18181b;
  --chip-selected: #e5e7eb;
  --chip-fg: #e5e7eb;
  --chip-selected-fg: #111827;

  --btn: #18181b;
  --btn-fg: #e5e7eb;
  --btn-hover: #24252a;

  --muted-surface: #111113;

  --selection-bg: #334155;
  --selection-fg: #e5e7eb;

  color-scheme: dark;
}

/* Base */
html,
body {
  background: var(--bg);
  color: var(--fg);
}
::selection {
  background: var(--selection-bg);
  color: var(--selection-fg);
}

/* Focus ring (uniform, accessible) */
.focus-ring {
  outline: none;
}
.focus-ring:focus-visible {
  outline: 2px solid var(--ring);
  outline-offset: 2px;
}

/* Buttons */
.btn {
  @apply inline-flex items-center gap-2 rounded-md border px-3 py-2 text-sm shadow-sm transition-colors;
  background: var(--btn);
  color: var(--btn-fg);
  border-color: var(--border);
}
.btn:hover {
  background: var(--btn-hover);
}
.btn:active {
  transform: translateY(0.5px);
}

/* Primary button (neutral, high-contrast) */
.btn-primary {
  @apply inline-flex items-center gap-2 rounded-md px-3 py-2 text-sm shadow-sm transition-transform;
  background: #111827;
  color: #ffffff;
}
:root.dark .btn-primary {
  background: #e5e7eb;
  color: #111827;
}
.btn-primary:hover {
  filter: brightness(1.06);
}
.btn-primary:active {
  transform: translateY(0.5px);
}

/* Inputs — fix "white flash" by using elevated bg at every state */
.input {
  @apply w-full rounded-md border px-3 py-2 text-sm transition-colors;
  background: var(--elevated);
  color: var(--fg);
  border-color: var(--border);
}
.input::placeholder {
  color: var(--muted);
}
.input:hover {
  background: var(--elevated-hover);
}
.input:focus,
.input:focus-visible {
  background: var(--elevated);
}

/* Cards */
.card {
  @apply rounded-lg border p-4 shadow-sm;
  background: var(--card);
  border-color: var(--border);
  color: var(--fg);
}

/* Chips */
.chip {
  @apply rounded-full border px-3 py-1.5 text-sm transition-colors whitespace-nowrap;
  background: var(--chip);
  color: var(--chip-fg);
  border-color: var(--border);
  cursor: pointer; /* makes it feel clickable */
  transition: background-color 0.15s ease, color 0.15s ease, border-color 0.15s ease, transform 0.06s ease;
}
.chip:hover {
  background: var(--elevated-hover); /* subtle hover */
}
.chip:active {
  transform: translateY(1px); /* tiny press feedback */
}
.chip[data-selected="true"] {
  background: var(--chip-selected);
  color: var(--chip-selected-fg);
  border-color: transparent;
}
.chip[data-selected="true"]:hover {
  filter: brightness(0.98); /* gentle hover even when selected */
}
.chip:focus-visible {
  outline: 2px solid var(--ring);
  outline-offset: 2px;
}

/* Code-ish block used as KaTeX fallback */
.code-block {
  @apply overflow-x-auto whitespace-pre rounded p-2 text-sm;
  background: var(--muted-surface);
  color: var(--fg);
}

/* Toasts */
.toast-wrap {
  @apply fixed z-50 inset-x-0 bottom-4 flex justify-center px-4 pointer-events-none;
}
.toast {
  @apply pointer-events-auto rounded-md border px-3 py-2 text-sm shadow-md;
  background: var(--card);
  color: var(--fg);
  border-color: var(--border);
  transition: transform 120ms ease, opacity 120ms ease;
}
.toast[data-state="in"] {
  transform: translateY(0);
  opacity: 1;
}
.toast[data-state="out"] {
  transform: translateY(8px);
  opacity: 0;
}

/* Simple modal */
.modal-overlay {
  @apply fixed inset-0 z-50;
  background: rgba(0, 0, 0, 0.4);
}
.modal-card {
  @apply mx-auto w-full max-w-xl rounded-lg border p-4 shadow-lg;
  background: var(--card);
  color: var(--fg);
  border-color: var(--border);
}

/* Small keyboard hint */
.kbd {
  @apply inline-flex items-center rounded border px-1 text-xs;
  border-color: var(--border);
  background: var(--card);
}

/* Segmented control selected state */
.segmented {
  display: inline-flex;
  gap: 0.25rem;
  padding: 0.25rem;
  border: 1px solid var(--border);
  border-radius: 0.5rem;
  background: var(--elevated);
}
.segmented .btn[data-selected="true"] {
  background: var(--ring-muted, rgba(0, 0, 0, 0.06));
  outline: 2px solid var(--ring);
  outline-offset: 0;
}

/* Optional: rerank fade helper if you switch to a class instead of keying */
.rerank-fade {
  animation: rerankFade 180ms ease-out;
}
@keyframes rerankFade {
  from {
    opacity: 0.6;
    transform: translateY(2px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Segmented controls styled like your inputs/buttons */
.segmented-like {
  display: inline-flex;
  gap: 0.25rem;
  padding: 0.25rem;
  border: 1px solid var(--border);
  border-radius: 0.5rem;
  background: var(--card);
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.04);
}

.segmented-like .seg-btn {
  appearance: none;
  border: 1px solid var(--border);
  background: var(--card);
  border-radius: 0.375rem;
  padding: 0.375rem 0.625rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  transition: background-color 0.15s ease, box-shadow 0.15s ease, transform 0.06s ease;
}
.segmented-like .seg-btn:hover {
  background: var(--elevated-hover);
}
.segmented-like .seg-btn:active {
  transform: translateY(1px);
}
.segmented-like .seg-btn[data-selected="true"] {
  outline: 2px solid var(--ring);
  outline-offset: 0;
  background: var(--elevated);
}

/* Inline code chips in prose (NOT fenced blocks) */
:where(main) :not(pre) > code {
  display: inline-flex;
  align-items: center;
  padding: 0.1rem 0.4rem; /* compact chip feel */
  border: 1px solid var(--border);
  border-radius: 6px;
  background: var(--muted-surface);
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  font-size: 0.9em;
  line-height: 1.6;
}

/* Keep fenced blocks untouched */
pre code {
  padding: 0;
  border: 0;
  background: transparent;
  border-radius: 0;
}

/* Fenced code blocks (``` ... ```) */
.prose pre,
pre.code-block {
  margin: 0.75rem 0;
  padding: 0.875rem 1rem;
  background: var(--elevated);
  border: 1px solid var(--border); /* subtle frame to match inline code */
  border-radius: 10px; /* softer than inline pills */
  box-shadow: 0 1px 0 rgba(0, 0, 0, 0.03); /* barely-there lift */
  overflow: auto; /* horizontal scroll if needed */
  -webkit-overflow-scrolling: touch;
}

/* Keep inner code transparent so the pre’s background shows through */
.prose pre code,
pre.code-block code {
  background: transparent;
  border: 0;
  padding: 0;
  font-family: ui-monospace, SFMono-Regular, Menlo, Consolas, "Liberation Mono", monospace;
  font-size: 0.9rem;
  line-height: 1.5;
  white-space: pre; /* no wrapping inside fenced blocks */
}

/* Optional: tighter top/bottom spacing when preceded/followed by headings or paragraphs */
.prose h2 + pre,
.prose h3 + pre {
  margin-top: 0.5rem;
}
.prose pre + p {
  margin-top: 0.5rem;
}

/* Hide scrollbar cross-browser */
.no-scrollbar::-webkit-scrollbar {
  display: none;
}
.no-scrollbar {
  -ms-overflow-style: none;
  scrollbar-width: none;
}
